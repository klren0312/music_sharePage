{
  "name": "aplayer",
  "version": "1.4.2",
  "description": "Wow, such a beautiful html5 music player",
  "main": "dist/APlayer.min.js",
  "scripts": {
    "test": "gulp release",
    "dev": "gulp",
    "build": "gulp release"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DIYgod/APlayer.git"
  },
  "keywords": [
    "player",
    "music",
    "html5"
  ],
  "author": {
    "name": "DIYgod"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/DIYgod/APlayer/issues"
  },
  "homepage": "https://github.com/DIYgod/APlayer#readme",
  "devDependencies": {
    "babel-preset-es2015": "^6.6.0",
    "browser-sync": "^2.12.4",
    "gulp": "^3.9.1",
    "gulp-autoprefixer": "^3.1.0",
    "gulp-babel": "^6.1.2",
    "gulp-concat": "^2.6.0",
    "gulp-cssnano": "^2.1.2",
    "gulp-rename": "^1.2.2",
    "gulp-sass": "^2.3.1",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.3"
  },
  "readme": "# APlayer\n\n[![npm](https://img.shields.io/npm/v/aplayer.svg?style=flat-square)](https://www.npmjs.com/package/aplayer)\n[![npm](https://img.shields.io/npm/l/aplayer.svg?style=flat-square)](https://www.npmjs.com/package/aplayer)\n[![devDependency Status](https://img.shields.io/david/dev/DIYgod/aplayer.svg?style=flat-square)](https://david-dm.org/DIYgod/APlayer#info=devDependencies)\n[![npm](https://img.shields.io/npm/dt/aplayer.svg?style=flat-square)](https://www.npmjs.com/package/aplayer)\n[![Travis](https://img.shields.io/travis/DIYgod/APlayer.svg?style=flat-square)](https://travis-ci.org/DIYgod/APlayer)\n[![%e2%9d%a4](https://img.shields.io/badge/made%20with-%e2%9d%a4-ff69b4.svg?style=flat-square)](https://www.anotherhome.net/)\n\nWow, such a beautiful html5 music player\n\n## Introduction\n\nUI 参考网易云音乐外链播放器\n\n[Demo](https://www.anotherhome.net/file/APlayer)\n\nScreenshot\n![image](https://i.imgur.com/JDrJXCr.png)\n\n## Install\n\n```\n$ npm install aplayer --save\n```\n\n## CDN\n\n[cdnjs](https://cdnjs.com/libraries/aplayer)\n\n## Usage\n\n### HTML\n\n```HTML\n<link rel=\"stylesheet\" href=\"APlayer.min.css\">\n<!-- ... -->\n<div id=\"player1\" class=\"aplayer\"></div>\n<!-- ... -->\n<script src=\"APlayer.min.js\"></script>\n```\n\n### JS\n\n```JS\nvar ap = new APlayer(option);\nap.init();\n```\n\n#### Options\n\n```JS\nvar option = {\n    element: document.getElementById('player1'),                       // Optional, player element\n    narrow: false,                                                     // Optional, narrow style\n    autoplay: true,                                                    // Optional, autoplay song(s), not supported by mobile browsers\n    showlrc: 0,                                                        // Optional, show lrc, can be 0, 1, 2, see: ###With lrc\n    mutex: true,                                                       // Optional, pause other players when this player playing\n    theme: '#e6d0b2',                                                  // Optional, theme color, default: #b7daff\n    music: {                                                           // Required, music info, see: ###With playlist\n        title: 'Preparation',                                          // Required, music title\n        author: 'Hans Zimmer/Richard Harvey',                          // Required, music author\n        url: 'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.mp3',  // Required, music url\n        pic: 'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.jpg'   // Optional, music picture\n        lrc: '[00:00.00]lrc here\\n[00:01.00]aplayer'                   // Optional, lrc, see: ###With lrc\n    }\n}\n```\n\n#### API\n\n+ `ap.init()`\n+ `ap.play()`\n+ `ap.pause()`\n\n#### Event binding\n\n`ap.on(event, handler)`\n\n`event`:\n+ `play`: Triggered when APlayer start play\n+ `pause`: Triggered when APlayer paused\n+ `canplay`: Triggered when enough data is available that APlayer can be played\n+ `playing`: Triggered periodically when APlayer is playing\n+ `ended`: Triggered when APlayer ended\n+ `error`: Triggered when an error occurs\n\n#### Work with module bundler\n\n```js\nvar APlayer = require('APlayer');\nvar ap = new APlayer({\n    // ...\n});\n```\n\n### With lrc\n\nShow lrc, you can put LRC in JS or HTML as you like.\n\n#### LRC format:\n\nSupport multiple time tag, support three decimal second\n\n```\n[mm:ss.xx]lyric\n[mm:ss.xxx]lyric\n[mm:ss.xx][mm:ss.xx][mm:ss.xx]lyric\n...\n```\n\n#### LRC in JS:\n\nJS:\n\n```js\n{\n    showlrc: 1,\n    music: {\n        lrc: '[00:00.00]lrc here\\n[00:01.00]aplayer'    // lrc here, separate lines with \\n\n    }\n}\n```\n\n#### LRC in HTML:\n\nJS:\n\n```js\n{\n    showlrc: 2\n}\n```\n\nHTML:\n\n```HTML\n<div id=\"player1\" class=\"aplayer\">\n    <pre class=\"aplayer-lrc-content\">\n        [00:00.00]平凡之路 - 朴树\n        [00:04.01]作词：韩寒 朴树\n        [00:08.02]作曲：朴树 编曲：朴树\n        [00:12.02]徘徊着的 在路上的\n        [00:17.37]你要走吗\n        [00:23.20]易碎的 骄傲着\n        <!-- ... -->\n    </pre>\n</div>\n```\n\n### With playlist\n\nShow multiple music.\n\n#### JS:\n\nOption:\n\n```JS\nmusic: [\n    {\n        title: '',\n        author: '',\n        url: '',\n        pic: ''\n    },\n    {\n        title: '',\n        author: '',\n        url: '',\n        pic: ''\n    },\n    ...\n]\n```\n\n## Run in development\n\n```\n$ npm install\n$ npm run dev\n```\n\n## Make a release\n\n```\n$ npm install\n$ npm run build\n```\n\n## Related Projects\n\n+ [APlayer-Typecho-Plugin](https://github.com/zgq354/APlayer-Typecho-Plugin)\n\n+ [hexo-tag-aplayer](https://github.com/grzhan/hexo-tag-aplayer)\n\n\n## LICENSE\n\nMIT © [DIYgod](http://github.com/DIYgod)\n",
  "readmeFilename": "README.md",
  "_id": "aplayer@1.4.2",
  "dist": {
    "shasum": "189ed51fd6425130adec7181fc00e155c9fe9cc6"
  },
  "_from": "aplayer@",
  "_resolved": "https://registry.npm.taobao.org/aplayer/download/aplayer-1.4.2.tgz"
}
